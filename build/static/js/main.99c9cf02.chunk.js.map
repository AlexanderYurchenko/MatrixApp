{"version":3,"sources":["components/form-group/form-group.jsx","components/intake/intake.jsx","actions/index.js","constants/action-types.js","components/table/table.jsx","App.js","serviceWorker.js","reducers/tableReducer.js","reducers/index.js","index.js"],"names":["FormGroup","state","name","title","value","this","setState","props","className","htmlFor","type","id","onChange","Component","Intake","columns","rows","spread","error","handleChange","event","target","handleSubmit","preventDefault","generateTable","onSubmit","nextProps","prevState","connect","tableReducer","dispatch","payload","isNaN","Table","handleSumHover","rowNum","currentTarget","parentElement","getAttribute","persist","table","eventType","hoverSum","handleCellClick","cellId","cellClick","handleRemoveClick","closest","rowIndex","getIndex","removeClick","handleCreateClick","createClick","handleCellHover","cellValue","searchCell","amount","allValues","getAllCellsValues","highlightedValues","findClosestValues","highlightedValuesLength","length","i","document","getElementById","classList","add","$cells","querySelectorAll","forEach","call","$cell","remove","row","cells","sum","percentAmount","Math","round","style","height","key","onClick","onMouseEnter","onMouseLeave","push","content","rowId","data-row","sumIsHovered","renderCells","transpondedTable","map","col","averageArray","j","item","average","renderFooterCells","footerCells","arr","toString","array","parameter","cellsQuantity","valuesArray","a","b","quantity","slicedArray","sort","compareNumbers","result","findClosestOne","resultObject","reduce","prev","curr","abs","closestIndex","indexOf","closestVal","splice","Fragment","renderRows","renderFooter","Boolean","window","location","hostname","match","action","digit","floor","random","cell","hoverSumTable","hoverSumRowNum","hoverId","hoverSpread","hoverTable","cellClickId","cellClickRowNum","cellClickTableId","cellClickSpread","clickCellTable","removeClickTableId","removeClickSpread","removeClickTable","createClickTableId","createClickSpread","slicedTable","slice","lastId","colsQuantity","createClickI","createClickTable","createClickCells","createClickRow","allReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.99c9cf02.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './form-group.scss';\r\n\r\nclass FormGroup extends Component {\r\n  state = {\r\n    name: '',\r\n    title: '',\r\n    value: '', \r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ \r\n      name: this.props.name, \r\n      title: this.props.title, \r\n    });\r\n  }\r\n\r\n  static getDerivedStateFromProps(props) {\r\n    return ({ \r\n      name: props.name, \r\n      title: props.title, \r\n      value: props.value,\r\n    });\r\n  }\r\n\r\n  render() { \r\n    const { name, title, value } = this.state;\r\n\r\n    return ( \r\n      <div className=\"c-form-group\">\r\n        <label className=\"c-form-group__title\" htmlFor={name}>{title}</label>\r\n        <input type='text' className=\"c-form-group__field\" id={name} name={name} value={value} onChange={this.props.onChange}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default FormGroup;","import React, { Component } from 'react';\r\nimport './intake.scss';\r\nimport FormGroup from \"../form-group/form-group\";\r\nimport { connect } from 'react-redux';\r\nimport { generateTable } from '../../actions';\r\n\r\nclass Intake extends Component {\r\n  state = {  \r\n    columns: null,\r\n    rows: null,\r\n    spread: null,\r\n    id: 1,\r\n    error: null\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return {\r\n      error: nextProps.error\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value \r\n    })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      id: this.state.id + 1\r\n    })\r\n    this.props.generateTable(this.state);\r\n  }\r\n\r\n  render() { \r\n    return ( \r\n      <form className=\"c-intake\" onSubmit={this.handleSubmit}>\r\n        <div className=\"c-intake__title\">Table parameters</div>\r\n        <div className=\"c-intake__box\">\r\n          <div className=\"c-intake__col\">\r\n            <FormGroup \r\n              name=\"rows\" \r\n              title=\"M (rows, max 15)\" \r\n              onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"c-intake__col\">\r\n            <FormGroup \r\n              name=\"columns\" \r\n              title=\"N (cols, max 15)\" \r\n              onChange={this.handleChange}/>\r\n          </div>\r\n          <div className=\"c-intake__col\">\r\n            <FormGroup \r\n              name=\"spread\" \r\n              title=\"X (spread)\" \r\n              onChange={this.handleChange}/>\r\n          </div>\r\n        </div>\r\n        { this.state.error && (\r\n          <div className=\"c-intake__error\">{this.state.error}</div>\r\n        )}\r\n        <div className=\"c-intake__btn-box\">\r\n          <button type=\"submit\" className=\"c-btn c-intake__btn\">Generate</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    error: state.tableReducer.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    generateTable: (payload) => dispatch(generateTable(payload))\r\n  }\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Intake);","import { GENERATE_TABLE, GENERATE_TABLE_ERROR, HOVER_SUM, CELL_CLICK, REMOVE_CLICK, CREATE_CLICK } from \"../constants/action-types\";\r\n\r\nexport const generateTable = (payload) => {\r\n  return (dispatch) => {\r\n    if ( !isNaN(payload.columns) && payload.columns && \r\n      !isNaN(payload.rows) && payload.rows &&\r\n      !isNaN(payload.spread)) {\r\n      if ( payload.columns <= 15 && payload.rows <= 15 ) {\r\n        dispatch({ type: GENERATE_TABLE, payload });\r\n      } else {\r\n        const error = 'Cols and rows must be not more than 15';\r\n        dispatch({\r\n          type: GENERATE_TABLE_ERROR,\r\n          error\r\n        })\r\n      }\r\n    } else {\r\n      const error = 'Input values must be integers';\r\n      dispatch({\r\n        type: GENERATE_TABLE_ERROR,\r\n        error\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const hoverSum = (payload) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: HOVER_SUM, payload });\r\n  }\r\n}\r\n\r\nexport const cellClick = (cellId, rowNum) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: CELL_CLICK, cellId, rowNum });\r\n  }\r\n}\r\n\r\nexport const removeClick = (rowIndex) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: REMOVE_CLICK, rowIndex });\r\n  }\r\n}\r\n\r\nexport const createClick = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: CREATE_CLICK });\r\n  }\r\n}","export const GENERATE_TABLE = \"GENERATE_TABLE\";\r\nexport const GENERATE_TABLE_ERROR = \"GENERATE_TABLE_ERROR\";\r\nexport const HOVER_SUM = \"HOVER_SUM\";\r\nexport const CELL_CLICK = \"CELL_CLICK\";\r\nexport const REMOVE_CLICK = \"REMOVE_CLICK\";\r\nexport const CREATE_CLICK = \"CREATE_CLICK\";\r\n","import React, { Component } from 'react';\r\nimport './table.scss';\r\nimport { connect } from 'react-redux';\r\nimport { hoverSum, cellClick, removeClick, createClick } from '../../actions';\r\n\r\nclass Table extends Component {\r\n  renderCells(row) {\r\n    let cells = [];\r\n    var sum = 0;\r\n\r\n    for (let i = 0; i < row.cells.length; i++) {\r\n      sum += row.cells[i].amount;\r\n    }\r\n\r\n    for (let i = 0; i < row.cells.length; i++) {\r\n      const percentAmount = Math.round((row.cells[i].amount / sum) * 100);\r\n      const style = {\r\n        height: percentAmount+ '%'\r\n      }\r\n      cells[i] = (<div key={i} id={row.cells[i].id} className=\"c-table__cell\" onClick={this.handleCellClick} onMouseEnter={this.handleCellHover} onMouseLeave={this.handleCellHover}>\r\n        <div className=\"c-table__cell-val\">\r\n          <div className=\"c-table__val-default\">{row.cells[i].amount}</div>\r\n          <div className=\"c-table__val-aux\">{percentAmount}%</div>\r\n        </div>\r\n        <div className=\"c-table__bg\" style={style}></div>\r\n      </div>);\r\n    }\r\n\r\n    cells.push(<div key={cells.length + 1} onMouseEnter={this.handleSumHover} onMouseLeave={this.handleSumHover} className=\"c-table__cell c-table__cell--aux\">\r\n      <div className=\"c-table__cell-val\">{sum}</div>\r\n      <button className=\"c-table__btn-remove\" onClick={this.handleRemoveClick}></button>\r\n    </div>);\r\n\r\n    return cells;\r\n  };\r\n\r\n  renderRows(){\r\n    let content = [];\r\n    const { table } = this.props;\r\n    \r\n    for (let i = 0; i < table.length; i++) {\r\n      let rowId = table[i].id;\r\n      content[i] = (<div key={i} data-row={rowId} className={\"c-table__row\" + (table[i].sumIsHovered ? '' : ' c-table__row--hide')}>{this.renderCells(table[i], i)}</div>);\r\n    }\r\n\r\n    return content;\r\n  }\r\n\r\n  renderFooter(){\r\n    let { table } = this.props;\r\n    let transpondedTable = table[0].cells.map(function(col, i){\r\n      return table.map(function(row){\r\n        return row.cells[i];\r\n      });\r\n    });\r\n\r\n    let averageArray = [];\r\n\r\n    for (let j = 0; j < transpondedTable.length; j++) {\r\n      let sum = 0;\r\n      transpondedTable[j].map(item => { sum += item.amount });\r\n      const average = Math.round(sum / transpondedTable[j].length);\r\n      averageArray.push(average);\r\n    }\r\n\r\n    return (\r\n      <div className=\"c-table__row c-table__row--aux\">{this.renderFooterCells(averageArray)}</div>\r\n    )\r\n  }\r\n\r\n  renderFooterCells(averageArray){\r\n    let footerCells = [];\r\n\r\n    for (let i = 0; i < averageArray.length; i++) {\r\n      footerCells[i] = (<div key={i} className=\"c-table__cell c-table__cell--aux\">{averageArray[i]}</div>);\r\n    }\r\n\r\n    return footerCells;\r\n  }\r\n\r\n  handleSumHover = (event) => {\r\n    const rowNum = event.currentTarget.parentElement.getAttribute('data-row');\r\n    event.persist();\r\n\r\n    const payload = {\r\n      table: this.props.table,\r\n      rowNum,     \r\n      eventType: event.type     \r\n    }\r\n\r\n    this.props.hoverSum(payload);\r\n  }\r\n\r\n  handleCellClick = (event) => {\r\n    const cellId = event.currentTarget.getAttribute('id');\r\n    const rowNum = event.currentTarget.parentElement.getAttribute('data-row');\r\n    this.props.cellClick(cellId, rowNum);\r\n  }\r\n\r\n  handleRemoveClick = (event) => {\r\n    const rowNum = event.currentTarget.closest('[data-row]').getAttribute('data-row'),\r\n          rowIndex = this.getIndex(rowNum, this.props.table);\r\n\r\n    this.props.removeClick(rowIndex);\r\n  }  \r\n\r\n  handleCreateClick = () => {\r\n    this.props.createClick();\r\n  }\r\n\r\n  handleCellHover = (event) => {\r\n    if (event.type === 'mouseenter') {\r\n      const { table, spread } = this.props;\r\n      const cellId = event.currentTarget.getAttribute('id');\r\n      const cellValue = this.searchCell(cellId, table, 'id').amount;\r\n      const allValues = this.getAllCellsValues(table);\r\n      \r\n      const highlightedValues = this.findClosestValues(cellValue, spread, allValues);\r\n      const highlightedValuesLength = highlightedValues ? highlightedValues.length : 0;\r\n\r\n      for (let i = 0; i < highlightedValuesLength; i++) {\r\n        const cell = this.searchCell(highlightedValues[i], table, 'amount');\r\n        const cellId = cell.id;\r\n        \r\n        const $cell = document.getElementById(`${cellId}`);\r\n        $cell.classList.add('c-table__cell--highlight');\r\n      }\r\n    } else {\r\n      const $cells = document.querySelectorAll(\".c-table__cell--highlight\");\r\n\r\n      [].forEach.call($cells, function($cell) {\r\n        $cell.classList.remove('c-table__cell--highlight');\r\n      });\r\n    }\r\n  }\r\n\r\n  getIndex(value, arr) {\r\n    for(let i = 0; i < arr.length; i++) {\r\n      let id = arr[i].id.toString();\r\n      if(id === value) {\r\n        return i;\r\n      }\r\n    }\r\n    \r\n    return -1;\r\n  }\r\n\r\n  searchCell(value, array, parameter) {\r\n    if (array) {\r\n      const cellsQuantity = array[0].cells.length;\r\n      for (let i = 0; i < array.length; i++) {\r\n        for (let j = 0; j < cellsQuantity; j++) {\r\n          if (array[i].cells[j][parameter] === value) {\r\n            return array[i].cells[j];\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  getAllCellsValues(array) {\r\n    const cellsQuantity = array[0].cells.length;\r\n    let valuesArray = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n      for (let j = 0; j < cellsQuantity; j++) {\r\n        valuesArray.push(array[i].cells[j].amount);\r\n      }\r\n    }\r\n    return valuesArray;\r\n  }\r\n\r\n  compareNumbers(a, b) {\r\n    if (a > b) return 1;\r\n    if (a === b) return 0;\r\n    if (a < b) return -1;\r\n  }\r\n\r\n  findClosestValues(value, quantity, array) {\r\n    let slicedArray = [...array.sort(this.compareNumbers)];\r\n    let result = [this.findClosestOne(value, slicedArray).closest];\r\n    \r\n    for (let i = 0; i < quantity; i++) {\r\n      const resultObject = this.findClosestOne(value, slicedArray);\r\n      slicedArray = resultObject.array;\r\n      result.push(resultObject.closest);\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  findClosestOne(value, array) {\r\n    const closest = array.reduce(function(prev, curr) {\r\n      return (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev);\r\n    });\r\n    const closestIndex = array.indexOf(closest);\r\n    const closestVal = array.splice(closestIndex, 1)[0];\r\n\r\n    return {\r\n      array,\r\n      closest: closestVal\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <React.Fragment>\r\n        {this.props.table.length ? \r\n        <div className=\"c-table\">\r\n          <div className=\"c-table__in\">\r\n            {this.renderRows()}\r\n            {this.renderFooter()}            \r\n          </div>\r\n          <button className=\"c-table__btn-add\" onClick={this.handleCreateClick}></button>\r\n        </div>\r\n        : ''\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    table: state.tableReducer.table,\r\n    id: state.tableReducer.id,\r\n    spread: state.tableReducer.spread\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    hoverSum: (payload) => dispatch(hoverSum(payload)),\r\n    cellClick: (cellId, rowNum) => dispatch(cellClick(cellId, rowNum)),\r\n    removeClick: (rowIndex) => dispatch(removeClick(rowIndex)),\r\n    createClick: () => dispatch(createClick())\r\n  }\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","import React from 'react';\nimport './App.scss';\nimport Intake from './components/intake/intake';\nimport Table from './components/table/table';\nimport { connect } from 'react-redux';\n\nfunction App(props) {\n  const { table } = props;\n\n  return (\n    <React.Fragment>\n      <div className=\"w-inner\">\n        <div className=\"c-header\">\n          <div className=\"w-center\">\n            <div className=\"c-header__in\">\n              <div className=\"c-header__logo\">MatrixApp</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"w-center\">\n          <div className=\"w-content\">\n            <Intake />\n            { table && table.length && <Table /> }\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    table: state.tableReducer.table\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GENERATE_TABLE, GENERATE_TABLE_ERROR, HOVER_SUM, CELL_CLICK, REMOVE_CLICK, CREATE_CLICK } from \"../constants/action-types\";\r\n\r\nconst tableReducer = (state = 0, action) => {\r\n  switch(action.type){\r\n    case GENERATE_TABLE:\r\n      const { columns, rows, spread, id } = action.payload;\r\n\r\n      if (state.id !== id) {\r\n        let table = [];\r\n  \r\n        for (let i = 0; i < rows; i++) {\r\n          let cells = [];\r\n          for (let j = 0; j < columns; j++) {\r\n            const digit = Math.floor(100 + Math.random() * 900);\r\n            const cell = {\r\n              id: '' + i + j,\r\n              amount: digit\r\n            }\r\n            cells.push(cell);\r\n          }\r\n  \r\n          let row = {\r\n            id: i,\r\n            cells: cells,\r\n            sumIsHovered: false\r\n          }\r\n  \r\n          table.push(row);\r\n        }   \r\n\r\n        return {\r\n          ...state,\r\n          error: null,\r\n          table: table,\r\n          id,\r\n          spread\r\n        };\r\n      }\r\n      return\r\n      \r\n    case GENERATE_TABLE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error\r\n      }\r\n\r\n    case HOVER_SUM: \r\n      const { table: hoverSumTable, rowNum: hoverSumRowNum, eventType } = action.payload,\r\n            hoverId = state.id,\r\n            hoverSpread = state.spread,\r\n            hoverTable = [...hoverSumTable];\r\n\r\n      if (hoverTable[hoverSumRowNum]) {\r\n        if (eventType === 'mouseenter') {\r\n          hoverTable[hoverSumRowNum].sumIsHovered = true;  \r\n        } else {\r\n          hoverTable[hoverSumRowNum].sumIsHovered = false; \r\n        };\r\n      }\r\n      return {\r\n        table: hoverTable,\r\n        id: hoverId,\r\n        spread: hoverSpread\r\n      }\r\n\r\n    case CELL_CLICK:\r\n      const { cellId: cellClickId, rowNum: cellClickRowNum } = action,\r\n            cellClickTableId = state.id,\r\n            cellClickSpread = state.spread,\r\n            clickCellTable = [...state.table];\r\n\r\n      clickCellTable[cellClickRowNum].cells.map(function(cell){\r\n        if (cell.id === cellClickId) {\r\n          cell.amount++ \r\n        }\r\n      })\r\n\r\n      return {\r\n        table: clickCellTable,\r\n        id: cellClickTableId,\r\n        spread: cellClickSpread\r\n      }\r\n\r\n    case REMOVE_CLICK:\r\n      const { rowIndex } = action,\r\n            removeClickTableId = state.id,\r\n            removeClickSpread = state.spread,\r\n            removeClickTable = [...state.table];\r\n\r\n      if (rowIndex >= 0) {\r\n        removeClickTable.splice(rowIndex, 1)\r\n      }\r\n\r\n      for (let i = 0; i < removeClickTable.length; i++) {\r\n        removeClickTable[i].id = i;\r\n      }   \r\n\r\n      return {\r\n        table: removeClickTable,\r\n        id: removeClickTableId,\r\n        spread: removeClickSpread\r\n      }\r\n\r\n    case CREATE_CLICK:\r\n      const createClickTableId = state.id,\r\n            createClickSpread = state.spread,            \r\n            slicedTable = [...state.table].slice(-1),\r\n            lastId = slicedTable[0].id,\r\n            colsQuantity = slicedTable[0].cells.length,\r\n            createClickI = lastId + 1;\r\n      let createClickTable = [...state.table],\r\n          createClickCells = [];\r\n\r\n      for (let j = 0; j < colsQuantity; j++) {\r\n        const digit = Math.floor(100 + Math.random() * 900);\r\n        const cell = {\r\n          id: '' + createClickI + j,\r\n          amount: digit\r\n        }\r\n        createClickCells.push(cell);\r\n      }\r\n\r\n      let createClickRow = {\r\n        id: createClickI,\r\n        cells: createClickCells,\r\n        sumIsHovered: false\r\n      }\r\n\r\n      createClickTable.push(createClickRow);\r\n\r\n      return {\r\n        table: createClickTable,\r\n        id: createClickTableId,\r\n        spread: createClickSpread\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default tableReducer;","import tableReducer from './tableReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n  tableReducer: tableReducer\r\n})\r\n\r\nexport default allReducers;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport allReducers from './reducers';\nimport { Provider } from 'react-redux';\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware } from \"redux\";\n\nconst store = createStore(\n  allReducers,\n  applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}